{
  "swagger": "2.0",
  "info": {
    "title": "Masterblog API",
    "description": "This API follows the CRUD Repository pattern for managing blog posts.\n\nEndpoints allow creating, reading, updating, and deleting posts in a structured way, leveraging service and model layers for clean separation of concerns.",
    "version": "1.0.0"
  },
  "host": "localhost:5002",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "tags": [
    {
      "name": "Posts",
      "description": "Operations related to blog posts"
    }
  ],
  "paths": {
    "/api/posts": {
      "get": {
        "summary": "Get all blog posts",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "enum": ["title", "content"],
            "description": "Sort the posts by 'title' or 'content'",
            "required": false
          },
          {
            "name": "direction",
            "in": "query",
            "type": "string",
            "enum": ["asc", "desc"],
            "description": "Direction of sorting: 'asc' for ascending, 'desc' for descending",
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "default": 1,
            "minimum": 1,
            "description": "Page number for pagination (starts from 1)",
            "required": false
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "default": 10,
            "minimum": 1,
            "description": "Number of posts per page",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "List of blog posts"
          },
          "500": {
            "description": "Server error"
          }
        },
        "tags": [
          "Posts"
        ]
      },
      "post": {
        "summary": "Create a new blog post",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "The title of the blog post.",
                  "required": true
                },
                "content": {
                  "type": "string",
                  "description": "The content of the blog post.",
                  "required": true
                },
                "author": {
                  "type": "string",
                  "description": "The author of the blog post.",
                  "required": false
                },
                "notes": {
                  "type": "string",
                  "description": "The notes for the blog post.",
                  "required": false
                }
              },
              "required": [
                "title",
                "content"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Post created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Server error"
          }
        },
        "tags": [
          "Posts"
        ]
      }
    },
    "/api/posts/search": {
      "get": {
        "summary": "Search posts by title or content",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "type": "string"
          },
          {
            "name": "content",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results"
          },
          "400": {
            "description": "Missing query parameter"
          },
          "500": {
            "description": "Server error"
          }
        },
        "tags": [
          "Posts"
        ]
      }
    },
    "/api/posts/{id}": {
      "put": {
        "summary": "Update a post by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                },
                "author": {
                  "type": "string"
                },
                "notes": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post updated"
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Server error"
          }
        },
        "tags": [
          "Posts"
        ]
      },
      "delete": {
        "summary": "Delete a post by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Post deleted"
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Server error"
          }
        },
        "tags": [
          "Posts"
        ]
      }
    }
  }
}